#!/usr/bin/env bash
set -e

# The simplest way I can see to do this is via some bash options. I
# tried some various 'find' incantations but none seem to behave
# terribly well.  These do:
#
#   - extglob: extension syntax for excluding files from a match (used in rm)
#   - dotglob: include dot files in a * match
#   - GLOBIGNORE: used to exclude '.' and '..' from a * match
#
# By doing all these operations on a single filesystem the 'mv'
# command is instantaneous.  There is a race condition between the
# 'rm' and the 'mv' though where there is an inconsistent filesystem.
#
# The absence of the path .barman-last-restore means that the files
# should not be used and a new backup should be requested.
shopt -s extglob
shopt -s dotglob
GLOBIGNORE=".:.."

DATABASE=$1

NIGHTLY_PATH=/nightly

INCOMING_PATH=.incoming

# Change directory here to simplify the path calculations later:
cd $NIGHTLY_PATH

barman recover $DATABASE latest $INCOMING_PATH
rm -f $NIGHTLY_PATH/.barman-last-restore
# This is the extglob syntax - read as "all paths except $INCOMING_PATH"
rm -rf !($INCOMING_PATH)
mv $INCOMING_PATH/* .
rmdir $INCOMING_PATH
echo $(date --rfc-3339=ns) > $NIGHTLY_PATH/.barman-last-restore
